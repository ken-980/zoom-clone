name: "zoom-clone"

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    environment:
      NODE_ENV: production
    ports:
      - 4173:4173
    depends_on:
      server:
        condition: service_started

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    
    ports:
      - "3380:3380"
    expose:
      - 3380
    # depends_on:
    #   postgres:
    #     condition: service_healthy
  # redis:
  #   image: 'redis:alpine'
  #   ports:
  #     - 6379:6379
  #   depends_on:
  #     - postgres
  #   restart: always


  # The commented out section below is an example of how to define a PostgreSQL
  # database that your application can use. `depends_on` tells Docker Compose to
  # start the database before your application. The `db-data` volume persists the
  # database data between container restarts. The `docker` secret is used
  # to set the database password. You must create `docker/password.txt` and add
  # a password of your choosing to it before running `docker-compose up`.
#   postgres:
#     image: postgres
#     restart: always
#     user: postgres
#     container_name: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=ease-db
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     ports:
#       - 5432:5432
#     expose:
#       - 5432
#     healthcheck:
#       test: ["CMD", "pg_isready"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: docker/password.txt
