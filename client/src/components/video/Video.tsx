import {  Grid2, Typography  } from "@mui/material";
// import { FloatingParticipantView } from './FloatingParticipant';
import {StreamVideoClient, StreamVideo, User, StreamCall, useCall, useCallStateHooks, CallingState} from "@stream-io/video-react-sdk"
import "../../styles/styles.css"

const apiKey = import.meta.env.VITE_API_KEY;

/**
 * User token: generated by server, when the use logs into the app
 * 
 */
//Set user object
 const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoia2VuX3dhbGtlciIsImlhdCI6MTczODY4OTAxNiwiZXhwIjoxNzM4NjkyNjE2fQ.qnJ4lXhj2Aga26V_cRABbOApJbPuuhwf9_Wip8Pc4I4"
const userId = "ken_walker";
const callId = "skriks"


const user : User = {
  id : userId,
  name : "Oliver",
  image : "https://i.pravatar.cc/300?img=59"
}


//call client
const client = new StreamVideoClient({apiKey,user,token});


//creating a call
const call = client.call('default', callId);
call.join({create : true});



export default function VideoApp() {
  return (
    <StreamVideo client={client}>
      <StreamCall call={call}>
          <VideoLayer />
      </StreamCall>
    </StreamVideo>
  );
}


export const VideoLayer = () => {

    const call = useCall();
    const { useCallCallingState, useParticipantCount } = useCallStateHooks();
    const callingState = useCallCallingState();
    const participantCount = useParticipantCount();

    //no user has joined the call
    if(callingState != CallingState.JOINED){
      return  (
        <Grid2
        sx={{
          height: `80%`,
          width: "100%",
          textAlign: "center",
          backgroundColor: "#ffff",
          borderRadius: "10px",
          position: "relative",
        }}
      > 
        <Typography> Loading,no users has joined the call </Typography>
        
      </Grid2>
      )
    }


  return (
    <>
      <Grid2
        sx={{
          height: `80%`,
          width: "100%",
          backgroundColor: "#ffff",
          borderRadius: "10px",
          position: "relative",
        }}
      > 
        <Typography sx={{textAlign : "center", }}> Call "{call?.id}" has {participantCount} participants</Typography>
      </Grid2>
    </>
  );
};


