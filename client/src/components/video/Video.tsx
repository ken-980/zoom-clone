import {  Grid2, Typography  } from "@mui/material";
// import { FloatingParticipantView } from './FloatingParticipant';
import {StreamVideoClient, StreamVideo, User, StreamCall, useCall, useCallStateHooks, CallingState} from "@stream-io/video-react-sdk"
import "../../styles/styles.css"

const apiKey = import.meta.env.VITE_API_KEY;


//set user object
const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwidXNlcl9pZCI6ImtlbiIsImlhdCI6MTczODE2NTk4MzE3N30.MQSFvbh5MtDULvUR6G9v38-joOD3hrF7ahfPu0DJjq";
const userId = "ken";
const callId = "NNe0vzmBfzkZ"

const user : User = {
  id : userId,
  name : "Oliver",
  image : "https://i.pravatar.cc/300?img=59"
}


//client
const client = new StreamVideoClient({apiKey,user,token});

//creating a call
const call = client.call('default', callId);
call.join({create : true});

/**
 * user token: generated by my server, when the use logs into the app
 * 
 */

export default function VideoApp() {
  return (
    <StreamVideo client={client}>
      <StreamCall call={call}>
        <Video />
      </StreamCall>
    </StreamVideo>
  );
}


export const Video = () => {

    const call = useCall();
    const { useCallCallingState, useParticipantCount } = useCallStateHooks();
    const callingState = useCallCallingState();
    const participantCount = useParticipantCount();

    console.log(call?.id)
    if(callingState != CallingState.JOINED){
      return  (
        <Grid2
        sx={{
          height: `80%`,
          width: "100%",
          backgroundColor: "#ffff",
          borderRadius: "10px",
          position: "relative",
        }}
      > 
        <Typography> Loading, no users has joined the call </Typography>
        
   
  
      </Grid2>
      )
    }


  return (
    
    <>
      <Grid2
        sx={{
          height: `80%`,
          width: "100%",
          backgroundColor: "#ffff",
          borderRadius: "10px",
          position: "relative",
        }}
      > 
        <Typography> Call "{call?.id}" has {participantCount} participants</Typography>
        c
      </Grid2>
    </>
  );
};


